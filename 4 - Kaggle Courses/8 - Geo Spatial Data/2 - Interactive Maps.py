"""
	Interactive Maps
"""

import pandas as pd
import geopandas as gpd
import math

# library to generate interactive maps
import folium
from folium import Choropleth, Circle, Marker
from folium.plugins import HeatMap, MarkerCluster

# Creating a simple map
# Good to: see streets

map_1 = folium.Map(location=[42.32, -71.0589]
				 , tiles='openstreetmap'
				 , zoom_start=10)

map_1


# Creating a Simple Map with Markers
# Good to: marker points in streets

map_2 = folium.Map(location=[42.32, -71.0589]
				 , tiles='cartodbpositron'
				 , zoom_start=13)

for index, row in df.iterrows():
	Marker([row['Lat'], row['Long']]).add_to(map_2)

map_2


# However, when we have a lot of Markers, it's
# better to use the Marker Cluster
# Good to: marker a bunch of points in streets

map_3 = folium.Map(location=[42.32, -71.0589]
				 , tiles='cartodbpositron'
				 , zoom_start=13)

mc = MarkerCluster()
for index, row in df.iterrows():
	mc.add_child(Marker([row['Lat'], row['Long']]))

map_3.add_child(mc)
map_3


# Using Circles instead of Markers #
# Good to: marker points with different colors/classes

map_4 = folium.Map(location=[42.32, -71.0589]
				 , tiles='cartodbpositron'
				 , zoom_start=13)

# Defining color by time
def color_producer(val): return 'forestgreen' if val <= 12 else 'darkred'

# adding the circles/bubbles
for i in range(len(df)):
	Circle(location=[df.iloc[i]['Lat'], df.iloc[i]['Long']]
		 , radius=20
		 , color=color_producer(df.iloc[i]['time'])
	).add_to(map_4)

map_4


# Creating a HeatMap
#
# Green >> less information
# Red >> more information
#
# Good to: show density, also we can use this
# kind of map instead of the Marker and MarkerCluster
# when we have a bunch of point datas

map_5 = folium.Map(location=[42.32, -71.0589]
				 , tiles='cartodbpositron'
				 , zoom_start=13)

HeatMap(
		data=df[['Lat', 'Long']]
		, radius=10
).add_to(map_5)

map_5


# Creating a Choropleth
# Good to: compare locales/areas with the data

map_6 = folium.Map(location=[42.32, -71.0589]
				 , tiles='cartodbpositron'
				 , zoom_start=13)

Choropleth(
		geo_data=gdf.__geo_interface__
		, data=df.values
		, key_on='feature.id'
		, fill_color='YlGnBu',
		, legend_name='My Legend (07-2022)'
).add_to(map_6)

map_6

#######

"""
Some browsers don't display maps generated by folium.
To solve this problem, use the function below in order
to every browser be able to display anyn maps.
"""
def embed_map(m, file_name):
    from IPython.display import IFrame
    m.save(file_name)
    return IFrame(file_name, width='100%', height='500px')